{"remainingRequest":"/home/mirion/Epitech/msc-pro/time-manager/interfaces/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mirion/Epitech/msc-pro/time-manager/interfaces/app/src/components/User.vue?vue&type=style&index=0&id=73968b0a&scoped=true&lang=css&","dependencies":[{"path":"/home/mirion/Epitech/msc-pro/time-manager/interfaces/app/src/components/User.vue","mtime":1635325239984},{"path":"/home/mirion/Epitech/msc-pro/time-manager/interfaces/app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mirion/Epitech/msc-pro/time-manager/interfaces/app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/mirion/Epitech/msc-pro/time-manager/interfaces/app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/mirion/Epitech/msc-pro/time-manager/interfaces/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mirion/Epitech/msc-pro/time-manager/interfaces/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKdXNlciB7CiAgICBkaXNwbGF5OiBmbGV4OwogICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICAgIHdpZHRoOiAxMDAlOwogICAgaGVpZ2h0OiAxMDB2aDsKfQppbnB1dC1yb3cgewogICAgZGlzcGxheTogZmxleDsKICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47Cn0KbGFibGUgewogICAgbWFyZ2luCn0K"},{"version":3,"sources":["User.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"User.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"user\">\n      <h1>User view</h1>\n      <div class=\"input-row\">\n          <label for=\"username\">Username</label>\n          <input type=\"text\" :value=\"$store.state.user.username\" @input=\"setUsername($event.target.value)\">\n      </div>\n  </div>\n</template>\n\n<script>\nimport store from '../store/index'\n\nexport default {\n    store: store,\n\n    created(){\n\n    },\n    methods: {\n        setUsername(username){\n            store.commit('setUsername', username)\n        }\n    },\n    computed: {\n        store(){\n            return this.$store.state\n        }\n    }\n}\n</script>\n\n<style scoped>\nuser {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    height: 100vh;\n}\ninput-row {\n    display: flex;\n    flex-direction: column;\n}\nlable {\n    margin\n}\n</style>"]}]}